#!/bin/bash

### BEGIN INIT INFO
# Provides: hibera
# Required-Start: $network $local_fs $remote_fs
# Should-Start:
# Required-Stop:
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description:
# Description:
### END INIT INFO

EXEC=/usr/bin/hiberad

[ -f /etc/hibera.conf ] && . /etc/hibera.conf

ARGS=""
[ ! "x$HIBERA_N" = "x" ] && ARGS="$ARGS -N=$HIBERA_N"
[ ! "x$HIBERA_ROOT" = "x" ] && ARGS="$ARGS -auth=$HIBERA_ROOT"
[ ! "x$HIBERA_BIND" = "x" ] && ARGS="$ARGS -bind=$HIBERA_BIND"
[ ! "x$HIBERA_PORT" = "x" ] && ARGS="$ARGS -port=$HIBERA_PORT"
[ ! "x$HIBERA_DOMAIN" = "x" ] && ARGS="$ARGS -domain=$HIBERA_DOMAIN"
[ ! "x$HIBERA_KEYS" = "x" ] && ARGS="$ARGS -keys=$HIBERA_KEYS"
[ ! "x$HIBERA_PATH" = "x" ] && ARGS="$ARGS -path=$HIBERA_PATH"
[ ! "x$HIBERA_SEEDS" = "x" ] && ARGS="$ARGS -seeds=$HIBERA_SEEDS"

function running() {
    pidof $EXEC >/dev/null 2>&1
    return $?
}

function start() {
    if running; then
        echo "running"
        return 1
    else
        (cd / && $EXEC $ARGS | logger -t hibera) &
        echo "started"
        return 0
    fi
}
function stop() {
    if running; then
        echo "stopped"
        kill $(pidof $EXEC)
        return $?
    else
        return 1
    fi
}
function status() {
    if running; then
        echo "running"
        return 0
    else
        echo "stopped"
        return 1
    fi
}

case "$1" in
  start)
    start
    exit $?
    ;;
  stop)
    stop
    exit $?
    ;;
  restart|force-reload)
    stop
    start
    exit $?
    ;;
  status)
    status
    exit $?
    ;;
  *)
    echo "usage: $0 {start|stop|restart|force-reload|status}"
    exit 2
esac
